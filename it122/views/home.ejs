<html>
    <head>
        <link rel="stylesheet" href="css/styles.css">
        <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
        <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
        <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
    </head>
    <body>
        <div>
            <h1>Home</h1>
        </div>

        <div>
            <h3>Pokemon List</h3>
            <div id="pokemon-list"></div>
        </div>
        <div>
            <div id="pokemon-details"></div>
        </div>

        <script type="text/babel">
            const { useState, useEffect } = React;

            const PokemonApp = () => {
                const [pokemon, setPokemon] = useState([]);
                const [selectedPokemon, setSelectedPokemon] = useState(null);
                const [editedPokemon, setEditedPokemon] = useState(null);

                // Load data after page renders
                useEffect(() => {
                    const fetchPokemon = async () => {
                        try {
                            const response = await fetch('/api/pokemon');
                            const data = await response.json();
                            setPokemon(data);
                        } catch (err) {
                            console.error("Failed to fetch Pokemon:", err);
                        }
                    };

                    fetchPokemon();
                }, []);

                const handlePokemonClick = (poke) => {
                    setSelectedPokemon(poke);
                    setEditedPokemon({ ...poke });
                };

                const handleInputChange = (e) => {
                    const { name, value } = e.target;
                    setEditedPokemon((prev) => ({
                        ...prev,
                        [name]: value,
                    }));
                };

                const handleSave = async () => {
                    const response = await fetch('/api/pokemon', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(editedPokemon),
                    });

                    const result = await response.json();
                    if (response.ok) {
                        setPokemon((prev) => {
                            const index = prev.findIndex((poke) => poke._id === result.pokemon._id);
                            if (index !== -1) {
                                prev[index] = result.pokemon;
                            } else {
                                prev.push(result.pokemon);
                            }
                            return [...prev];
                        });
                        setSelectedPokemon(result.pokemon);
                    } else {
                        console.error('Error saving Pokemon:', result.error);
                    }
                };

                const handleDelete = async () => {
                    if (!selectedPokemon) return;

                    const response = await fetch('/api/pokemon?name=' + selectedPokemon.name, {
                        method: 'DELETE',
                    });

                    const result = await response.json();
                    if (response.ok) {
                        setPokemon((prev) => prev.filter((poke) => poke._id !== selectedPokemon._id));
                        setSelectedPokemon(null);
                        setEditedPokemon(null);
                    } else {
                        console.error('Error deleting Pokemon:', result.error);
                    }
                };

                return (
                    <div>
                        <div>
                            <h3>Pokemon</h3>
                            <ul>
                                {pokemon.length > 0 ? (
                                    pokemon.map((poke) => (
                                        <li key={poke._id}>
                                            <a href="#" onClick={() => handlePokemonClick(poke)}>
                                                {poke.name}
                                            </a>
                                        </li>
                                    ))
                                ) : (
                                    <p>No Pokémon found.</p>
                                )}
                            </ul>
                        </div>

                        <h3>Selected Pokémon</h3>

                        <div>
                            {selectedPokemon ? (
                                <div>
                                    <h3>{selectedPokemon.name}</h3>
                                    <img src={selectedPokemon.picture} alt={selectedPokemon.name} width="300" height="300" />
                                    <p><b>Category:</b> {selectedPokemon.category}</p>
                                    <p><b>Type:</b> {selectedPokemon.type.join(" | ")}</p>
                                    <p><b>Pokedex Number:</b> {selectedPokemon.dex_num}</p>
                                    <p><b>Debut:</b> {selectedPokemon.debut}</p>
                                </div>
                            ) : (
                                <p>No Pokémon selected.</p>
                            )}

                            {editedPokemon ? (
                                <div>
                                    <h4>Edit Pokémon</h4>
                                    <form>
                                        <label>Name:</label>
                                        <input
                                            type="text"
                                            name="name"
                                            value={editedPokemon.name || ""}
                                            onChange={handleInputChange}
                                        />
                                        <br />
                                        <label>Category:</label>
                                        <input
                                            type="text"
                                            name="category"
                                            value={editedPokemon.category || ""}
                                            onChange={handleInputChange}
                                        />
                                        <br />
                                        <label>Type:</label>
                                        <input
                                            type="text"
                                            name="type"
                                            value={editedPokemon.type.join(" | ")}
                                            onChange={(e) => handleInputChange({ target: { name: 'type', value: e.target.value.split(' | ') } })}
                                        />
                                        <br />
                                        <label>Pokedex Number:</label>
                                        <input
                                            type="number"
                                            name="dex_num"
                                            value={editedPokemon.dex_num || ""}
                                            onChange={handleInputChange}
                                        />
                                        <br />
                                        <label>Debut:</label>
                                        <input
                                            type="text"
                                            name="debut"
                                            value={editedPokemon.debut || ""}
                                            onChange={handleInputChange}
                                        />
                                        <br />
                                        <label>Picture URL:</label>
                                        <input
                                            type="text"
                                            name="picture"
                                            value={editedPokemon.picture || ""}
                                            onChange={handleInputChange}
                                        />
                                        <br />
                                        <button type="button" onClick={handleSave}>Save</button>
                                        <button type="button" onClick={handleDelete}>Delete</button>
                                    </form>
                                </div>
                            ) : null}
                        </div>
                    </div>
                );
            };

            const pokemonData = <%- JSON.stringify(pokemon) %>;

            ReactDOM.render(<PokemonApp />, document.getElementById('pokemon-list'));
        </script>
    </body>
</html>

<!-- <html>
    <head>
        <link rel="stylesheet" href="css/styles.css">
        <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
        <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
        <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
    </head>
    <body>
        <div>
            <h1>Home</h1>
        </div>

        <div>
            <h3>Pokemon</h3>
            <div id="pokemon-list"></div>
        </div>

        <script type="text/babel">
            // Define component
            const PokemonList = ({ pokemon }) => {
                return (
                    <ul>
                        {pokemon.length > 0 ? (
                            pokemon.map((poke) => (
                                <li key={poke._id}>
                                    <a href={`/detail?name=${poke.name}`}>
                                        {poke.name}
                                    </a>
                                </li>
                            ))
                        )
                        : (
                            <p>No Pokémon found.</p>
                        )}
                    </ul>
                );
            };

            const pokemonData = <%- JSON.stringify(pokemon) %>; 

            ReactDOM.render(<PokemonList pokemon={pokemonData} />, document.getElementById('pokemon-list'));
        </script>
    </body>
</html> -->

<!-- <html>
    <head>
        <link rel="stylesheet" href="css/styles.css">
    </head>
    <body>
        <div>
        <h1> Home </h1>
        </div>

        <div>
        <h3> Pokemon </h3>

        <% pokemon.forEach(function(poke) { %>
            <li><a href="/detail?name=<%= poke.name %>"><%= poke.name %></a></li>
        <% }); %>
        <br>
        </div>
    </body>
</html> -->